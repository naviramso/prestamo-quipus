<div class="space-y-6">
    <!-- Header -->
    <div class="bg-white rounded-lg shadow-sm border p-6">
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-2xl font-bold text-gray-800">Gestión de Administradores</h1>
                <p class="text-gray-600">Administra los usuarios del sistema</p>
            </div>
            <% if (admin.rol === 'administrador') { %>
                <a href="/admin/administradores/registrar" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md font-medium transition-colors flex items-center">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                    </svg>
                    Nuevo Administrador
                </a>
            <% } %>
        </div>
    </div>

    <!-- Estadísticas -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div class="bg-white rounded-lg shadow-sm border p-4">
            <div class="flex items-center">
                <div class="p-2 bg-blue-100 rounded-lg">
                    <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm font-medium text-gray-600">Total Usuarios</p>
                    <p class="text-xl font-semibold text-gray-900" id="totalUsuarios">0</p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-sm border p-4">
            <div class="flex items-center">
                <div class="p-2 bg-green-100 rounded-lg">
                    <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm font-medium text-gray-600">Administradores</p>
                    <p class="text-xl font-semibold text-gray-900" id="totalAdministradores">0</p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-sm border p-4">
            <div class="flex items-center">
                <div class="p-2 bg-purple-100 rounded-lg">
                    <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm font-medium text-gray-600">Usuarios Ver</p>
                    <p class="text-xl font-semibold text-gray-900" id="totalVer">0</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de Administradores -->
    <div class="bg-white rounded-lg shadow-sm border">
        <div class="p-6 border-b">
            <div class="flex justify-between items-center">
                <div>
                    <h2 class="text-lg font-semibold text-gray-800">Lista de Administradores</h2>
                    <p class="text-gray-600 text-sm" id="contadorResultados">Cargando usuarios...</p>
                </div>
                <button 
                    onclick="cargarAdministradores()"
                    class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center"
                >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                    </svg>
                    Actualizar
                </button>
            </div>
        </div>

        <div class="p-6">
            <div class="overflow-x-auto">
                <table class="min-w-full table-auto">
                    <thead>
                        <tr class="bg-gray-50">
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Nombre</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Usuario</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Rol</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Fecha Registro</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="tabla-administradores">
                        <tr>
                            <td colspan="5" class="px-4 py-8 text-center text-gray-500">
                                <div class="flex justify-center">
                                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-red-600"></div>
                                </div>
                                <p class="mt-2">Cargando administradores...</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal para editar administrador -->
<div id="modalEditar" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-800 mb-4">Editar Administrador</h3>
            
            <form id="form-editar" class="space-y-4">
                <input type="hidden" id="editarId">
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Nombre</label>
                    <input 
                        type="text" 
                        id="editarNombre" 
                        required
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    >
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Usuario</label>
                    <input 
                        type="text" 
                        id="editarUsername" 
                        required
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    >
                </div>

                <% if (admin.rol === 'administrador') { %>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Rol</label>
                    <select 
                        id="editarRol" 
                        required
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    >
                        <option value="administrador">Administrador</option>
                        <option value="ver">Ver</option>
                    </select>
                </div>
                <% } %>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Nueva Contraseña (opcional)</label>
                    <input 
                        type="password" 
                        id="editarContrasenia" 
                        placeholder="Dejar vacío para no cambiar"
                        minlength="6"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    >
                    <p class="text-xs text-gray-500 mt-1">Mínimo 6 caracteres</p>
                </div>

                <div class="flex justify-end space-x-3 pt-2">
                    <button 
                        type="button"
                        onclick="cerrarModalEditar()"
                        class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors"
                    >
                        Cancelar
                    </button>
                    <button 
                        type="submit"
                        class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors"
                    >
                        Guardar Cambios
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    let administradores = [];
    let usuarioActualId = <%- JSON.stringify(admin.id) %>;

    // Cargar administradores al iniciar
    document.addEventListener('DOMContentLoaded', function() {
        cargarAdministradores();
    });

    async function cargarAdministradores() {
        try {
            mostrarLoading();
            
            const response = await fetch('/api/administradores');
            
            if (response.status === 403) {
                mostrarError('No tienes permisos para ver la lista de administradores.');
                return;
            }

            administradores = await response.json();

            if (response.ok) {
                actualizarEstadisticas(administradores);
                renderizarAdministradores();
            } else {
                mostrarError('Error al cargar los administradores');
            }
        } catch (error) {
            console.error('Error:', error);
            mostrarError('Error de conexión');
        }
    }

    function actualizarEstadisticas(admins) {
        const total = admins.length;
        const administradores = admins.filter(a => a.rol === 'administrador').length;
        const ver = admins.filter(a => a.rol === 'ver').length;

        document.getElementById('totalUsuarios').textContent = total;
        document.getElementById('totalAdministradores').textContent = administradores;
        document.getElementById('totalVer').textContent = ver;
    }

    function renderizarAdministradores() {
        const tbody = document.getElementById('tabla-administradores');
        
        if (administradores.length === 0) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="5" class="px-4 py-8 text-center text-gray-500">
                        No hay administradores registrados.
                    </td>
                </tr>
            `;
        } else {
            tbody.innerHTML = administradores.map(admin => `
                <tr class="border-b hover:bg-gray-50">
                    <td class="px-4 py-3">
                        <div class="flex items-center">
                            <div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center mr-3">
                                <span class="text-sm font-semibold text-red-800">${admin.nombre.charAt(0).toUpperCase()}</span>
                            </div>
                            <div>
                                <p class="text-sm font-medium text-gray-900">${admin.nombre}</p>
                                ${admin.id == usuarioActualId ? '<span class="text-xs text-blue-600 font-medium">(Tú)</span>' : ''}
                            </div>
                        </div>
                    </td>
                    <td class="px-4 py-3 text-sm text-gray-600">${admin.username}</td>
                    <td class="px-4 py-3">
                        ${obtenerBadgeRol(admin.rol)}
                    </td>
                    <td class="px-4 py-3 text-sm text-gray-600">
                        ${new Date(admin.fecha_creacion).toLocaleDateString()}
                    </td>
                    <td class="px-4 py-3">
                        <div class="flex space-x-2">
                            <button 
                                onclick="abrirModalEditar(${admin.id})"
                                class="text-blue-600 hover:text-blue-800 text-sm font-medium"
                                ${admin.rol !== 'administrador' && admin.id != usuarioActualId ? 'style="display: none;"' : ''}
                            >
                                Editar
                            </button>
                            <button 
                                onclick="eliminarAdministrador(${admin.id}, '${admin.nombre}')"
                                class="text-red-600 hover:text-red-800 text-sm font-medium"
                                ${admin.rol !== 'administrador' || admin.id == usuarioActualId ? 'style="display: none;"' : ''}
                            >
                                Eliminar
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        document.getElementById('contadorResultados').textContent = `Mostrando ${administradores.length} usuarios`;
    }

    function obtenerBadgeRol(rol) {
        const colores = {
            'administrador': 'bg-green-100 text-green-800',
            'ver': 'bg-blue-100 text-blue-800'
        };
        
        const textos = {
            'administrador': 'Administrador',
            'ver': 'Ver'
        };

        return `<span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full ${colores[rol]}">${textos[rol]}</span>`;
    }

    async function abrirModalEditar(id) {
        try {
            const response = await fetch(`/api/administradores/${id}`);
            
            if (response.status === 403) {
                mostrarMensaje('error', 'No tienes permisos para editar este usuario.');
                return;
            }

            const admin = await response.json();

            if (response.ok) {
                document.getElementById('editarId').value = admin.id;
                document.getElementById('editarNombre').value = admin.nombre;
                document.getElementById('editarUsername').value = admin.username;
                
                <% if (admin.rol === 'administrador') { %>
                document.getElementById('editarRol').value = admin.rol;
                <% } %>
                
                document.getElementById('modalEditar').classList.remove('hidden');
            }
        } catch (error) {
            console.error('Error:', error);
            mostrarMensaje('error', 'Error al cargar los datos');
        }
    }

    function cerrarModalEditar() {
        document.getElementById('modalEditar').classList.add('hidden');
        document.getElementById('form-editar').reset();
    }

    document.getElementById('form-editar').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const id = document.getElementById('editarId').value;
        const nombre = document.getElementById('editarNombre').value.trim();
        const username = document.getElementById('editarUsername').value.trim();
        
        <% if (admin.rol === 'administrador') { %>
        const rol = document.getElementById('editarRol').value;
        <% } %>
        
        const contrasenia = document.getElementById('editarContrasenia').value;

        const datos = {
            nombre,
            username
        };

        <% if (admin.rol === 'administrador') { %>
        datos.rol = rol;
        <% } %>

        if (contrasenia) {
            if (contrasenia.length < 6) {
                mostrarMensaje('error', 'La contraseña debe tener al menos 6 caracteres.');
                return;
            }
            datos.contrasenia = contrasenia;
        }

        try {
            const response = await fetch(`/api/administradores/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(datos)
            });

            const data = await response.json();

            if (response.ok) {
                mostrarMensaje('success', data.mensaje);
                cerrarModalEditar();
                cargarAdministradores();
                
                // Si el usuario editó su propia información, recargar la página
                if (id == usuarioActualId) {
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                }
            } else {
                mostrarMensaje('error', data.error);
            }
        } catch (error) {
            console.error('Error:', error);
            mostrarMensaje('error', 'Error de conexión');
        }
    });

    async function eliminarAdministrador(id, nombre) {
        if (!confirm(`¿Estás seguro de eliminar al administrador "${nombre}"?\nEsta acción no se puede deshacer.`)) {
            return;
        }

        try {
            const response = await fetch(`/api/administradores/${id}`, {
                method: 'DELETE'
            });

            const data = await response.json();

            if (response.ok) {
                mostrarMensaje('success', data.mensaje);
                cargarAdministradores();
            } else {
                mostrarMensaje('error', data.error);
            }
        } catch (error) {
            console.error('Error:', error);
            mostrarMensaje('error', 'Error de conexión');
        }
    }

    function mostrarLoading() {
        const tbody = document.getElementById('tabla-administradores');
        tbody.innerHTML = `
            <tr>
                <td colspan="5" class="px-4 py-8 text-center text-gray-500">
                    <div class="flex justify-center">
                        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-red-600"></div>
                    </div>
                    <p class="mt-2">Cargando administradores...</p>
                </td>
            </tr>
        `;
    }

    function mostrarError(mensaje) {
        const tbody = document.getElementById('tabla-administradores');
        tbody.innerHTML = `
            <tr>
                <td colspan="5" class="px-4 py-8 text-center text-red-500">
                    <svg class="w-12 h-12 mx-auto text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z"/>
                    </svg>
                    <p class="mt-2 font-medium">${mensaje}</p>
                    <button 
                        onclick="cargarAdministradores()"
                        class="mt-2 bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded text-sm"
                    >
                        Reintentar
                    </button>
                </td>
            </tr>
        `;
    }

    function mostrarMensaje(tipo, texto) {
        const notification = document.createElement('div');
        notification.className = `fixed top-4 right-4 p-4 rounded-md shadow-lg z-50 ${
            tipo === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
        }`;
        notification.textContent = texto;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.remove();
        }, 5000);
    }
</script>