<div class="max-w-4xl mx-auto">
    <div class="bg-white p-6 rounded-lg shadow-sm border">
        <div class="flex items-center justify-between mb-6">
            <div>
                <h2 class="text-xl font-semibold text-gray-800">Registrar Nuevo Estudiante</h2>
                <p class="text-gray-600 text-sm">Complete todos los campos obligatorios</p>
            </div>
            <a href="/admin/estudiantes/lista"
                class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                ← Volver a la lista
            </a>
        </div>

        <form id="form-estudiante" class="space-y-6">
            <!-- Información Personal -->
            <div>
                <h3 class="text-lg font-medium text-gray-800 mb-4">Información Personal</h3>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Apellido Paterno *
                        </label>
                        <input type="text" id="apellido_paterno" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-colors">
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Apellido Materno *
                        </label>
                        <input type="text" id="apellido_materno" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-colors">
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Nombres *
                        </label>
                        <input type="text" id="nombres" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-colors">
                    </div>
                </div>
            </div>

            <!-- Información Académica -->
            <div>
                <h3 class="text-lg font-medium text-gray-800 mb-4">Información Académica</h3>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Cédula de Identidad *
                        </label>
                        <input type="text" id="ci" required placeholder="Solo números" pattern="[0-9]+"
                            title="Solo se permiten números"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-colors">
                        <p class="text-xs text-gray-500 mt-1">Solo números, sin puntos ni guiones</p>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Grado *
                        </label>
                        <select id="grado" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-colors">
                            <option value="">Seleccionar grado</option>
                            <option value="4">4to Grado</option>
                            <option value="5">5to Grado</option>
                            <option value="6">6to Grado</option>
                        </select>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Paralelo *
                        </label>
                        <select id="paralelo" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-colors">
                            <option value="">Seleccionar paralelo</option>
                            <!-- Los paralelos se cargarán dinámicamente -->
                        </select>
                    </div>
                </div>
            </div>

            <!-- Información de Contacto -->
            <div>
                <h3 class="text-lg font-medium text-gray-800 mb-4">Información de Contacto</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Teléfono (Opcional)
                        </label>
                        <input type="tel" id="telefono" placeholder="Ej: 71234567"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-colors">
                        <p class="text-xs text-gray-500 mt-1">Número de teléfono opcional</p>
                    </div>
                </div>
            </div>

            <div class="flex space-x-4 pt-4">
                <button type="submit"
                    class="bg-red-600 hover:bg-red-700 text-white py-2 px-6 rounded-md font-medium transition-colors flex items-center">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                    </svg>
                    Registrar Estudiante
                </button>

                <button type="button" onclick="window.location.href='/admin/estudiantes/lista'"
                    class="bg-gray-500 hover:bg-gray-600 text-white py-2 px-6 rounded-md font-medium transition-colors">
                    Cancelar
                </button>
            </div>
        </form>

        <div id="mensaje" class="mt-6 p-4 rounded-md hidden"></div>

        <!-- Estudiantes recién registrados -->
        <div id="estudiantes-recientes" class="mt-8 hidden">
            <h3 class="text-lg font-medium text-gray-800 mb-4">Estudiantes Registrados Recientemente</h3>
            <div class="bg-gray-50 rounded-lg p-4">
                <div class="overflow-x-auto">
                    <table class="min-w-full text-sm">
                        <thead>
                            <tr class="bg-gray-100">
                                <th class="px-3 py-2 text-left text-xs font-medium text-gray-500">Nombre Completo</th>
                                <th class="px-3 py-2 text-left text-xs font-medium text-gray-500">CI</th>
                                <th class="px-3 py-2 text-left text-xs font-medium text-gray-500">Grado/Paralelo</th>
                                <th class="px-3 py-2 text-left text-xs font-medium text-gray-500">Estado</th>
                            </tr>
                        </thead>
                        <tbody id="lista-recientes">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let estudiantesRegistrados = [];
    let configGrados = {};

    // Cargar configuración de grados al iniciar
    document.addEventListener('DOMContentLoaded', async function () {
        await cargarConfigGrados();

        // Event listeners
        document.getElementById('grado').addEventListener('change', actualizarParalelos);
        document.getElementById('ci').addEventListener('input', formatCI);

        // Auto-enfocar el primer campo
        document.getElementById('apellido_paterno').focus();
    });

    async function cargarConfigGrados() {
        try {
            const response = await fetch('/api/config/grados');
            
            const grados = await response.json();
            
            grados.forEach(grado => {
                configGrados[grado.grado] = JSON.parse(grado.paralelos);
            });

        } catch (error) {
            console.error('Error al cargar configuración de grados:', error);
        }
    }

    function actualizarParalelos() {
        const grado = document.getElementById('grado').value;
        const paraleloSelect = document.getElementById('paralelo');

        paraleloSelect.innerHTML = '<option value="">Seleccionar paralelo</option>';
        if (grado && configGrados[grado]) {
            configGrados[grado].forEach(paralelo => {
                const option = document.createElement('option');
                option.value = paralelo;
                option.textContent = `Paralelo ${paralelo}`;
                paraleloSelect.appendChild(option);
            });
        }
    }

    function formatCI() {
        const ciInput = document.getElementById('ci');
        let value = ciInput.value.replace(/\D/g, ''); // Remover no números
        ciInput.value = value;
    }

    document.getElementById('form-estudiante').addEventListener('submit', async function (e) {
        e.preventDefault();

        const estudiante = {
            apellido_paterno: document.getElementById('apellido_paterno').value.trim(),
            apellido_materno: document.getElementById('apellido_materno').value.trim(),
            nombres: document.getElementById('nombres').value.trim(),
            ci: document.getElementById('ci').value.trim(),
            grado: document.getElementById('grado').value,
            paralelo: document.getElementById('paralelo').value,
            telefono: document.getElementById('telefono').value.trim() || null
        };

        // Validaciones
        if (!validarEstudiante(estudiante)) {
            return;
        }

        try {
            const response = await fetch('/api/estudiantes/registrar', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(estudiante)
            });

            const data = await response.json();

            if (response.ok) {
                mostrarMensaje('success', data.mensaje);

                // Agregar a la lista de recientes
                estudiantesRegistrados.unshift({
                    ...estudiante,
                    id: data.id,
                    fecha: new Date().toLocaleString(),
                    estado: 'activo'
                });

                actualizarListaRecientes();
                this.reset();
                actualizarParalelos(); // Resetear paralelos

                // Mostrar sección de recientes si hay elementos
                if (estudiantesRegistrados.length > 0) {
                    document.getElementById('estudiantes-recientes').classList.remove('hidden');
                }
            } else {
                mostrarMensaje('error', data.error);
            }
        } catch (error) {
            console.error('Error:', error);
            mostrarMensaje('error', 'Error de conexión. Intenta nuevamente.');
        }
    });

    function validarEstudiante(estudiante) {
        const mensaje = document.getElementById('mensaje');

        // Validar CI (solo números, mínimo 5 dígitos)
        if (!/^\d{5,}$/.test(estudiante.ci)) {
            mostrarMensaje('error', 'El CI debe contener solo números y tener al menos 5 dígitos.');
            return false;
        }

        // Validar nombres y apellidos (solo letras y espacios)
        const regexTexto = /^[A-Za-zÁáÉéÍíÓóÚúÑñ\s]+$/;
        if (!regexTexto.test(estudiante.apellido_paterno) ||
            !regexTexto.test(estudiante.apellido_materno) ||
            !regexTexto.test(estudiante.nombres)) {
            mostrarMensaje('error', 'Los nombres y apellidos solo pueden contener letras y espacios.');
            return false;
        }

        return true;
    }

    function mostrarMensaje(tipo, texto) {
        const mensaje = document.getElementById('mensaje');
        mensaje.textContent = texto;
        mensaje.className = 'mt-6 p-4 rounded-md';

        if (tipo === 'success') {
            mensaje.classList.add('bg-green-100', 'border', 'border-green-400', 'text-green-700');
        } else {
            mensaje.classList.add('bg-red-100', 'border', 'border-red-400', 'text-red-700');
        }

        mensaje.classList.remove('hidden');

        // Auto-ocultar mensajes de éxito después de 5 segundos
        if (tipo === 'success') {
            setTimeout(() => {
                mensaje.classList.add('hidden');
            }, 5000);
        }
    }

    function actualizarListaRecientes() {
        const tbody = document.getElementById('lista-recientes');
        tbody.innerHTML = '';

        // Mostrar solo los últimos 5
        const ultimos = estudiantesRegistrados.slice(0, 5);

        ultimos.forEach(estudiante => {
            const row = document.createElement('tr');
            row.className = 'border-b';
            row.innerHTML = `
                <td class="px-3 py-2">
                    <div class="text-gray-900 font-medium">
                        ${estudiante.apellido_paterno} ${estudiante.apellido_materno} ${estudiante.nombres}
                    </div>
                </td>
                <td class="px-3 py-2 text-gray-600">${estudiante.ci}</td>
                <td class="px-3 py-2 text-gray-600">${estudiante.grado}° ${estudiante.paralelo}</td>
                <td class="px-3 py-2">
                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                        ${estudiante.estado}
                    </span>
                </td>
            `;
            tbody.appendChild(row);
        });
    }
</script>